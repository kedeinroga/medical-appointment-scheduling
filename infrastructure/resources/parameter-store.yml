Resources:
  # Simple parameters without tags initially to debug the issue
  RDSDatabaseParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /medical-appointment/${self:provider.stage}/rds/database
      Type: String
      Value: medical_appointments
      Description: Database name for Medical Appointment

  RDSUsernameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /medical-appointment/${self:provider.stage}/rds/username
      Type: String
      Value: admin
      Description: Database username for Medical Appointment

  # These will be added later once the basic ones work
  # RDSHostParameter:
  #   Type: AWS::SSM::Parameter
  #   DependsOn: RDSInstance
  #   Properties:
  #     Name: /medical-appointment/${self:provider.stage}/rds/host
  #     Type: String
  #     Value: !GetAtt RDSInstance.Endpoint.Address
  #     Description: RDS endpoint for Medical Appointment DB

  # RDSPortParameter:
  #   Type: AWS::SSM::Parameter
  #   DependsOn: RDSInstance
  #   Properties:
  #     Name: /medical-appointment/${self:provider.stage}/rds/port
  #     Type: String
  #     Value: !GetAtt RDSInstance.Endpoint.Port
  #     Description: RDS port for Medical Appointment DB

  # RDSPasswordParameter:
  #   Type: AWS::SSM::Parameter
  #   DependsOn: RDSMasterSecret
  #   Properties:
  #     Name: /medical-appointment/${self:provider.stage}/rds/password
  #     Type: String
  #     Value: !Sub "{{resolve:secretsmanager:medical-appointment-rds-${self:provider.stage}:SecretString:password}}"
  #     Description: Database password for Medical Appointment (from Secrets Manager)

  # DeploymentBucketParameter:
  #   Type: AWS::SSM::Parameter
  #   DependsOn: ServerlessDeploymentBucket
  #   Properties:
  #     Name: /medical-appointment/${self:provider.stage}/deployment/bucket
  #     Type: String
  #     Value: !Ref ServerlessDeploymentBucket
  #     Description: S3 bucket for serverless deployments
