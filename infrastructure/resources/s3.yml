Resources:
  # S3 Bucket for Serverless Framework deployments
  ServerlessDeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      # Use existing bucket name format to avoid conflicts
      BucketName: medical-appointment-serverless-${self:provider.stage}-${aws:accountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldDeployments
            Status: Enabled
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
            ExpirationInDays: 365
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Service
          Value: medical-appointment-scheduling
        - Key: Stage
          Value: ${self:provider.stage}
        - Key: Purpose
          Value: serverless-deployments

  # S3 Bucket Policy - Enforce secure transport
  ServerlessDeploymentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ServerlessDeploymentBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: "*"
            Action: 
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
            Resource: !Sub "${ServerlessDeploymentBucket}/*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"
